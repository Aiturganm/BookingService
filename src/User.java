import java.math.BigDecimal;
import java.util.Arrays;
import java.util.Scanner;

public class User extends Bank{
    private String name;
    private String email;
    private String address;
    private long phoneNumber;
    private String password;
    public User(){}

    public User(String name, String email, String password, String address, long phoneNumber, BigDecimal balance) {
        super(balance);
        this.name = name;
        this.email = email;
        this.password = password;
        this.address = address;
        this.phoneNumber = phoneNumber;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        if(!name.isEmpty()) {
            this.name = name;
        }else {
            String nn;
            do{
                System.out.println("–ò–º—è –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—É—Å—Ç—ã–º");
                System.out.println("–í–≤–µ–¥–∏—Ç–µ –∏–º—è:");
                nn = new Scanner(System.in).nextLine();
            }while (nn.isEmpty());
            this.name = name;
        }
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        if(email.contains("@gmail.com")) {
            this.email = email;
        }else{
            String ee;
            do{
                System.out.println("–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å @gmail.com");
                System.out.println("–í–≤–µ–¥–∏—Ç–µ –µ–º–∞–π–ª: ");
                ee = new Scanner(System.in).nextLine();
            }while(!ee.contains("@gmail.com"));
        }
    }

    public String getAddress() {
        return address;
    }

    public void setAddress(String address) {
        if(!address.isEmpty()) {
            this.address = address;
        }else{
            String aa;
            do{
                System.out.println("–ê–¥—Ä–µ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º");
                System.out.println("–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å:");
                aa = new Scanner(System.in).nextLine();
            }while (aa.isEmpty());
        }
    }

    public long getPhoneNumber() {
        return phoneNumber;
    }

    public void setPhoneNumber(long phoneNumber) {
            this.phoneNumber = phoneNumber;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        if(password.length()>=4) {
            this.password = password;
        }else {
            String pp;
            do{
                System.out.println("–î–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 4");
                System.out.println("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å");
                pp = new Scanner(System.in).nextLine();
            }while(pp.length()<4);
        }
    }



    public static User register(User user){
        Scanner scanner = new Scanner(System.in);

        System.out.print("–í–≤–µ–¥–∏—Ç–µ –∏–º—è: ");
        user.setName(scanner.nextLine());
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –µ–º–∞–π–ª: ");
        user.setEmail(scanner.nextLine());
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ");
        user.setPassword(scanner.nextLine());
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å: ");
        user.setAddress(scanner.nextLine());
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ");
        user.setPhoneNumber(scanner.nextLong());
        System.out.print("–í–Ω–µ—Å–∏—Ç–µ –æ–ø–ª–∞—Ç—É –Ω–∞ —Å—á–µ—Ç: ");
        user.setBalance(new Scanner(System.in).nextBigDecimal());
        System.out.println("\n–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!‚úÖ");
        return user;
    }

    public BigDecimal pay(BigDecimal price, BigDecimal balance){
        setBalance(balance.subtract(price));
        return getBalance();
    }

    public BigDecimal deposit(BigDecimal deposit){
         setBalance(getBalance().add((deposit)));
         return getBalance();
    }

    public static User[] addUserToArray(User[] users, User registerUser) {
        User[] newArray = Arrays.copyOf(users, users.length + 1);
        newArray[newArray.length - 1] = registerUser;
        return newArray;
    }

    public static User login(User[] users){
        Scanner scanner = new Scanner(System.in);
        boolean isTruee = false;
        System.out.println("–í–≤–µ–¥–∏—Ç–µ –µ–º–∞–π–ª: ");
        String email = scanner.nextLine();
        System.out.println("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ");
        String password = scanner.nextLine();

        for (User user : users) {
            if(user.getEmail().equals(email) && user.getPassword().equals(password)){
                System.out.println("–í–•–û–î –ü–†–û–®–ï–õ –£–°–ü–ï–®–ù–û!‚úÖ\n");
                isTruee = true;
                return user;
            }
        }
        if(isTruee != true) {
            System.out.println("–í–•–û–î –ù–ï –£–î–ê–õ–°–Ø!üö´");
        }
        return null;
    }


    @Override
    public String toString() {
        return "User{" +
                "name='" + name + '\'' +
                ", email='" + email + '\'' +
                ", address='" + address + '\'' +
                ", phoneNumber=" + phoneNumber +
                ", password='" + password + '\'' +
                "} " + super.toString();
    }
}
